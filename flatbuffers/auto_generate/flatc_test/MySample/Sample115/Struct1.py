# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Sample115

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Struct1(object):
    __slots__ = ['_tab']

    # Struct1
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Struct1
    def Struct2a(self, obj, i):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0 + i * 12)
        return obj

    # Struct1
    def Struct2aLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(0))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Struct1
    def Struct2aIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(0))
        return o == 0


def CreateStruct1(builder, struct2a_struct3a_ifielda):
    builder.Prep(4, 36)
    for _idx0 in range(3 , 0, -1):
        builder.Prep(4, 12)
        for _idx1 in range(3 , 0, -1):
            builder.Prep(4, 4)
            builder.PrependInt32(struct2a_struct3a_ifielda[_idx0-1][_idx1-1])
    return builder.Offset()
