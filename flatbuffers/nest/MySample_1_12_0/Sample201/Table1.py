# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Sample201

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Table1(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsTable1(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Table1()
        x.Init(buf, n + offset)
        return x

    # Table1
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Table1
    def Struct2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from MySample.Sample201.Struct2 import Struct2
            obj = Struct2()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Table1Start(builder): builder.StartObject(1)
def Table1AddStruct2(builder, struct2): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(struct2), 0)
def Table1End(builder): return builder.EndObject()
