test_name: 簡単なテスト


includes:
  - !include ../include/includes.yaml

marks:
  - parametrize:
      key: param_val_name
      vals:
        - user1
        # - user2

  - parametrize:
      key: param_val_age
      vals:
        - 20
        # - 30

stages:
  - name: HTTP レスポンスステータスコードのチェック
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      # HTTP レスポンスステータスコードで200が返る
      status_code: 200

  - name: HTTPレスポンス(json)のチェック(外部関数利用なし)
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      json:
        _id: !re_fullmatch "[-0-9a-z]+"
        index: !anything
        guid: !anything
        isActive: !anything
        balance: !anything
        picture: !anything
        # age: !anything
        age: !int "{var_age:d}"
        eyeColor: !anything
        # name: !anything
        name: !!str "{var_name:s}"
        gender: !anything
        company: !anything
        email: !anything
        phone: !anything
        address: !anything
        about: !anything
        registered: !anything
        latitude: !anything
        longitude: !anything
        tags: !anything
        friends: 
        - id: !anything
          etc: !anything

  - name: HTTPレスポンス(json)のチェック(外部関数利用あり)
    # skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: helper.testing_utils:is_specified_json
        extra_kwargs:
          schema: 
            name: "{var_name:s}"
            age: "{var_age:d}"

  - name: HTTPレスポンス(json)の保存
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: helper.testing_utils:save_response
        extra_kwargs:
          fname: response.txt

  - name: クエリパラメータ＋HTTPレスポンス(json)の保存
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/requestval?name="{param_val_name}"&age={param_val_age}
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: helper.testing_utils:save_response
        extra_kwargs:
          fname: requestval_{param_val_name}_{param_val_age}.txt

  - name: HTTPレスポンス(_id)を変数(_id)に保存する
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      save:
        json:
          # 変数保存(次のStageで使用可能)
          save_id: "_id"

  - name: 保存した変数(_id)を使用する
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: helper.testing_utils:disp_response
        extra_kwargs:
          # 変数利用
          _id: "{save_id:s}"

  - name: Azure blob をダウンロードする
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
    response:
      status_code: 200
      verify_response_with:
        function: helper.testing_utils:download_azure_blob
        extra_kwargs:

  - name: login
    skip: True    # ステージ単位でのSkip
    request:
      url: http://127.0.0.1:5000/items
      method: GET
      headers:
        x-my-header: abc123
        $ext:
          function: helper.testing_utils:generate_bearer_token
      json:
        username: test_user
        password: abc123
    response:
      status_code: 200